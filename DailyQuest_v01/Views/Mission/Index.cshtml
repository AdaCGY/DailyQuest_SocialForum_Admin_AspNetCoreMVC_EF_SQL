@model DailyQuest_v01.Models.ViewModel.CreateTaskDTO
@{
    ViewData["Title"] = "Index";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<h1>任務清單</h1>
<div class="row">
    <div class="col-4">
        <button type="button" class="btn btn-primary" id="createtask">新增任務</button>
    </div>
    <div class="col-4"></div>
    <div class="col-4">
        <input type="search" class="form-control" id="inputSearch" placeholder="關鍵字搜尋" />
    </div>
</div>
<div class="table-responsive">
    <table class="table table-hover text-nowrap align-middle">
        <thead class="table-light text-center">
            <tr>
                <th></th>
                <th>@Html.DisplayNameFor(model => model.TaskTypeName)</th>
                <th>@Html.DisplayNameFor(model => model.TaskLabelName)</th>
                <th>@Html.DisplayNameFor(model => model.TaskContent)</th>
                <th>@Html.DisplayNameFor(model => model.ExpectDate)</th>
                <th>@Html.DisplayNameFor(model => model.SetPeriod)</th>
                <th>@Html.DisplayNameFor(model => model.CreateDate)</th>
                <th>@Html.DisplayNameFor(model => model.TaskResultName)</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>
<!--用於新增任務的彈跳出介面-->
<div class="modal fade" id="createTaskModel" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <form id="createform" asp-action="CreateTask" method="post" novalidate>
                <div class="text-danger" asp-validation-summary="ModelOnly"></div>
                <div class="modal-header">
                    <h5 class="modal-title" id="createTaskLabel">新增任務</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3 row">
                        <label asp-for="TaskTypeName" class="col-sm-2 col-form-label"></label>
                        <div class="col-sm-10">
                            <select class="form-select" asp-for="TaskTypeName" asp-items="ViewBag.tasktypename"></select>
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label asp-for="TaskLabelName" class="col-sm-2 col-form-label"></label>
                        <div class="col-sm-10">
                            <select class="form-select" asp-for="TaskLabelName" asp-items="ViewBag.tasklabelname"></select>
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label asp-for="TaskContent" class="col-sm-2 col-form-label"></label>
                        <div class="col-sm-10">
                            <input class="form-control" asp-for="TaskContent" />
                            <span asp-validation-for="TaskContent" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label asp-for="ExpectDate" class="col-sm-2 col-form-label"></label>
                        <div class="col-sm-10">
                            <input class="form-control" asp-for="ExpectDate" type="date">
                            <span asp-validation-for="ExpectDate" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label asp-for="SetPeriod" class=" col-sm-2 col-form-label"></label>
                        <div class="col-sm-10">
                            @foreach (var item in ViewBag.setperiod)
                            {
                                <input class="form-check-input" id="@item" name="setperiod" type="radio" value="@item">
                                <label class="form-check-label" name="setperiod">@item</label>
                            }
                        </div>
                        <span asp-validation-for="SetPeriod" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                    <button type="submit" class="btn btn-primary" id="createsubmit">儲存</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!--用於修改任務的彈跳出介面-->
<div class="modal fade" id="replaceTaskModel" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <form id="replacetaskform" asp-action="ReplaceTask" method="post" novalidate>
                <div class="text-danger" asp-validation-summary="ModelOnly"></div>
                <div class="modal-header">
                    <h5 class="modal-title" id="replaceTaskLabel">修改任務</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                    <button type="submit" class="btn btn-primary" id="replacesubmit">儲存</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!--用於刪除任務的彈跳出介面-->
<div class="modal fade" id="deleteTaskModel" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteTaskLabel">提示：刪除任務</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h6>此筆任務是否要刪除呢？</h6>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="submit" class="btn btn-primary" id="deletesubmit">確認</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        //新增任務button_彈出介面
        const btnsubmit = document.querySelector('#createtask');
        btnsubmit.addEventListener('click', (event) => {
            const myModal = new bootstrap.Modal(document.getElementById('createTaskModel'));
            myModal.show();
        });
        //把ISO格式(yyyy-MM-ddT~)轉為yyyy-MM-dd
        const formatDate = (dateStr) => {
            const data = new Date(dateStr);
            return data.toISOString().split('T')[0];
        };
        //用於呈現於頁面上的task資料表
        const loadDate = async () => {
            const response = await fetch(`@Url.Content("~/Mission/GetAllTasks")`);
            const datas = await response.json();
            const htmlData = datas.map((data) => {
                const {taskId, taskTypeName, taskLabelName, taskContent, expectDate, setPeriod, createDate, taskResultName} = data
                return `
                    <tr>
                    <td>
                        <button id="replacetask${taskId}" onclick="replacebtn(${taskId})" value="${taskId}"><i class="fa-solid fa-magnifying-glass" style="margin:2px"></i></button>
                        <button id="deletetask${taskId}" onclick="deletebtn(${taskId})"><i class="fa-solid fa-trash-can" style="margin:2px"></i></button>
                    </td>
                    <td class="text-center">${taskTypeName}</td>
                    <td class="text-center">${taskLabelName}</td>
                    <td class="text-center">${taskContent}</td>
                    <td class="text-center">${formatDate(expectDate)}</td>
                    <td class="text-center">${setPeriod}</td>
                    <td class="text-center">${formatDate(createDate)}</td>
                    <td class="text-center">${taskResultName}</td>
                    </tr>
                `
            });
            document.querySelector('tbody').innerHTML = htmlData.join('');
        };
        loadDate();
        //放大鏡(修改)button_彈出介面
        const replacebtn = (async (taskid) => {
            const myModal = new bootstrap.Modal(document.getElementById('replaceTaskModel'));
            //抓取目前選取的資料內容
            const response = await fetch(`@Url.Content("~/Mission/GetSingleTask")?singletaskid=${taskid}`);
            const datas = await response.json();
            console.log(datas);
            //從後台抓取任務類型、任務標籤、週期設定
            const tyresponse = await fetch(`@Url.Content("~/Mission/GetTypeName")`)
            const gettypename = await tyresponse.json();
            const tynaoptions = gettypename.map(opt => {
                const selected = opt.taskTypeName == datas.taskTypeName ? 'selected' : '';
                return `<option value="${opt.taskTypeName}" ${selected}>${opt.taskTypeName}</option>`;
            }).join('');
            const lbresponse = await fetch(`@Url.Content("~/Mission/GetLabelName")`)
            const getlabelname = await lbresponse.json();
            const lbnaoptions = getlabelname.map(opt => {
                const selected = opt.taskLabelName == datas.taskLabelName ? 'selected' : '';
                return `<option value="${opt.taskLabelName}" ${selected}>${opt.taskLabelName}</option>`;
            }).join('');
            const setperiodresponse = await fetch(`@Url.Content("~/Mission/GetSetPeriodContent")`)
            const getsetperiod = await setperiodresponse.json();
            const setperiodoptions = getsetperiod.map(opt => {
                const checked = opt == datas.setPeriod ? 'checked' : '';
                return `<input class="form-check-input" id="${datas.taskId}" name="setperiod" type="radio" value="${opt}" ${checked}>
                <label class="form-check-label" name="setperiod">${opt}</label>`;
            }).join('');
            const htmlData = (() => {
                return `
                <input type="hidden" name="TaskId" value="${datas.taskId}">
                <div class="mb-3 row">
                    <label for="TaskTypeName" class="col-sm-2 col-form-label">任務類型</label>
                    <div class="col-sm-10">
                        <select id="TaskTypeName" class="form-select" name="TaskTypeName">
                            ${tynaoptions}
                        </select>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label for="TaskLabelName" class="col-sm-2 col-form-label">任務標籤</label>
                    <div class="col-sm-10">
                        <select id="TaskLabelName" class="form-select" name="TaskLabelName">
                            ${lbnaoptions}
                        </select>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label for="TaskContent" class="col-sm-2 col-form-label">任務內容</label>
                    <div class="col-sm-10">
                        <input class="form-control" name="TaskContent" value="${datas.taskContent}"/>
                        <span asp-validation-for="TaskContent" class="text-danger"></span>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label name="ExpectDate" class="col-sm-2 col-form-label">設定完成日</label>
                    <div class="col-sm-10">
                        <input class="form-control" name="ExpectDate" type="date" value="${formatDate(datas.expectDate)}">
                        <span asp-validation-for="ExpectDate" class="text-danger"></span>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label asp-for="SetPeriod" class="col-sm-2 col-form-label"></label>
                    <div class="col-sm-10">
                        ${setperiodoptions}
                    </div>
                    <span asp-validation-for="SetPeriod" class="text-danger"></span>
                </div>
                `
            });
            document.querySelector('#replacetaskform .modal-body').innerHTML = htmlData();
            myModal.show();
            return datas;
        });
        let currentdeleteid = null;
        //垃圾桶(刪除)button_是否刪除的彈跳介面
        const deletebtn = ((singletaskid) => {
            currentdeleteid = singletaskid;
            const myModal = new bootstrap.Modal(document.getElementById('deleteTaskModel'));
            myModal.show();
        });
        //垃圾桶(刪除)button_刪除任務
        document.getElementById('deletesubmit').addEventListener('click', async ()=>{
            if (!currentdeleteid) return console.log("沒有該任務編號");
            await fetch(`@Url.Content("~/Mission/DeleteSingleTask")?singletaskid=${currentdeleteid}`);
            //彈跳介面已經經由fetch(非同步請求)，故只能用js進行手動關閉modal
            const deletemodal = bootstrap.Modal.getInstance(document.getElementById('deleteTaskModel'));
            if (deletemodal) bootstrap.Modal.getInstance(document.getElementById('deleteTaskModel')).hide();
            loadDate();
        });
    </script>
}



